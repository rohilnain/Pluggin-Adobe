<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Root SYSTEM "MappingTable.dtd">
<Root File-format="xhtml-1-00-css-1-00" Menu-name="XHTML 1.0 with CSS 1.0" Mac-creator="MSIE" Mac-type="TEXT" Win-suffix="htm" Encode-out="Html-ascii-out">
	<!--
	ADOBE SYSTEMS INCORPORATED
	Copyright 2003 Adobe Systems Incorporated
	All Rights Reserved
	
	NOTICE:  This Notice only applies to this file or any portion thereof.
	Adobe permits you to use, modify, and distribute this file in accordance
	with the terms and conditions of the Adobe license agreement accompanying
	it ("Agreement").  Additionally, Adobe grants you a nonexclusive,
	nontransferable, royalty-free license to use, modify and distribute
	all or any portion of this file.  Where the terms of this Notice
	and the terms of the Agreement differ, the terms of this Notice
	shall control.  All other terms and conditions of the Agreement
	remain unchanged and have full force and effect.  If you have received
	this file from a source other than Adobe, then your use, modification,
	or distribution of it requires the prior written permission of Adobe.
-->
	<!--WARNING: Root:encode-out is set to HTML-ASCII-OUT because
MSIE-5.xx does not properly process UTF-8 for XHTML, even though
the proper XML directive appears in the file.-->
	<!-- ===== Define proc lists =====-->
	<!--===== Defined Proc-lists =====-->
	<Define-proc-list Name="basic-metadata">
		<!--For HTML, we issue Dublin Core Metadata plus Keywords.-->
		<Proc-var Pdf-var="Title" Owner="Metadata" Type="String" Inherit="Not-inherited" Condition="Has-value">
			<Emit-string>&lt;META</Emit-string>
			<Emit-string SP-Before="Yes" NL-Before="Yes">name=&quot;DC.Title&quot;</Emit-string>
			<Emit-string SP-Before="Yes" NL-Before="Yes">content=&quot;</Emit-string>
			<Proc-string/>
			<Emit-string NL-After="Yes">&quot; &gt;</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="Author" Owner="Metadata" Type="String" Inherit="Not-inherited" Condition="Has-value">
			<!--Author is mapped to DC.Contributor for Dublin Core Metadata.-->
			<Emit-string>&lt;META</Emit-string>
			<Emit-string SP-Before="Yes" NL-Before="Yes">name=&quot;DC.Contributor&quot;</Emit-string>
			<Emit-string SP-Before="Yes" NL-Before="Yes">content=&quot;</Emit-string>
			<Proc-string/>
			<Emit-string NL-After="Yes">&quot; &gt;</Emit-string>
		</Proc-var>
		<!--Metadata:Keywords.  Dublin core does not support this doc-info/metadata item.-->
		<Proc-var Pdf-var="Subject" Owner="Metadata" Type="String" Inherit="Not-inherited" Condition="Has-value">
			<Emit-string>&lt;META</Emit-string>
			<Emit-string SP-Before="Yes" NL-Before="Yes">name=&quot;DC.Subject&quot;</Emit-string>
			<Emit-string SP-Before="Yes" NL-Before="Yes">content=&quot;</Emit-string>
			<Proc-string/>
			<Emit-string NL-After="Yes">&quot; &gt;</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="Creator" Owner="Metadata" Type="String" Inherit="Not-inherited" Condition="Has-value">
			<Emit-string>&lt;META</Emit-string>
			<Emit-string SP-Before="Yes" NL-Before="Yes">name=&quot;DC.Creator&quot;</Emit-string>
			<Emit-string SP-Before="Yes" NL-Before="Yes">content=&quot;</Emit-string>
			<Proc-string/>
			<Emit-string NL-After="Yes">&quot; &gt;</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="CreationDate" Owner="Metadata" Type="String" Inherit="Not-inherited" Condition="Has-value">
			<Emit-string>&lt;META</Emit-string>
			<Emit-string SP-Before="Yes" NL-Before="Yes">name=&quot;DC.Date&quot;</Emit-string>
			<Emit-string SP-Before="Yes" NL-Before="Yes">content=&quot;</Emit-string>
			<Proc-string/>
			<Emit-string NL-After="Yes">&quot; &gt;</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="ModDate" Owner="Metadata" Type="String" Inherit="Not-inherited" Condition="Has-value">
			<Emit-string>&lt;META</Emit-string>
			<Emit-string SP-Before="Yes" NL-Before="Yes">name=&quot;DC.Date.Modified&quot;</Emit-string>
			<Emit-string SP-Before="Yes" NL-Before="Yes">content=&quot;</Emit-string>
			<Proc-string/>
			<Emit-string NL-After="Yes">&quot; &gt;</Emit-string>
		</Proc-var>
		<!--Metadata:Trapped.  Dublin core does not support this doc-info/metadata item.-->
	</Define-proc-list>
	<!--@ Attribute lists-->
	<!--@ special owner attribute handling-->
	<Define-proc-list Name="Arbitrary-user-attributes">
		<Proc-property>
			<Comment>Emit a space before the property name</Comment>
			<Emit-string SP-Before="Yes"/>
			<Property-name/>
			<Property-type Type="Fixed">
				<!--There is no way for PDF to determine &quot;Length&quot; vs &quot;Fixed&quot;.-->
				<!--There is no way for PDF to determine &quot;Pixels&quot; vs &quot;Fixed&quot;.-->
				<Emit-string>=</Emit-string>
				<Proc-fixed/>
			</Property-type>
			<Property-type Type="Int32">
				<Emit-string>=</Emit-string>
				<Proc-integer/>
			</Property-type>
			<Property-type Type="Int32">
				<Emit-string>=</Emit-string>
				<Proc-integer/>
			</Property-type>
			<Property-type Type="Atom">
				<Emit-string>=&apos;</Emit-string>
				<Proc-string/>
				<Emit-string>&apos;</Emit-string>
			</Property-type>
			<Property-type Type="String">
				<Emit-string>=&apos;</Emit-string>
				<Proc-string/>
				<Emit-string>&apos;</Emit-string>
			</Property-type>
		</Proc-property>
	</Define-proc-list>
	<Define-proc-list Name="User-attributes">
		<Walk-proplist Owner="XHTML-1.00" Use-proclist="Arbitrary-user-property"/>
	</Define-proc-list>
	<Define-proc-list Name="Element-attributes">
		<Proc-var Pdf-var="Alt" Owner="Structelem" Type="String" Inherit="Not-inherited" Condition="Has-value">
			<Emit-string SP-Before="Yes">alt=&quot;</Emit-string>
			<Proc-string/>
			<Emit-string>&quot;</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="Lang" Owner="Structelem" Type="String" Inherit="Inheritable" Condition="Diff-from-default-or-parent">
			<Emit-string SP-Before="Yes">xml:lang=&quot;</Emit-string>
			<Proc-string/>
			<Emit-string>&quot;</Emit-string>
		</Proc-var>
	</Define-proc-list>
	<Define-proc-list Name="Span-element-attributes">
		<!--Alt is not allowed on Spans-->
		<Proc-var Pdf-var="Lang" Owner="Structelem" Type="String" Inherit="Inheritable" Condition="Diff-from-default-or-parent">
			<Emit-string SP-Before="Yes">xml:lang=&quot;</Emit-string>
			<Proc-string/>
			<Emit-string>&quot;</Emit-string>
		</Proc-var>
	</Define-proc-list>
	<Define-proc-list Name="Span-attributes">
		<Proc-var Pdf-var="E" Owner="Inline-markup" Type="String" Inherit="Not-inherited" Condition="Has-value">
			<!--Output as alt-text since XHTML 1.0  does not have an expansion-text attribute.-->
			<Emit-string SP-Before="Yes">alt=&quot;</Emit-string>
			<Proc-string/>
			<Emit-string>&quot;</Emit-string>
		</Proc-var>
	</Define-proc-list>
	<Define-proc-list Name="Span-entry-wrappers">
		<Proc-var Pdf-var="BaselineShift" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Less-than-value" Compare="0">
			<Emit-string>&lt;sub&gt;</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="BaselineShift" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="More-than-value" Compare="0">
			<Emit-string>&lt;sup&gt;</Emit-string>
		</Proc-var>
	</Define-proc-list>
	<Define-proc-list Name="Span-exit-wrappers">
		<Proc-var Pdf-var="BaselineShift" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="More-than-value" Compare="0">
			<Emit-string>&lt;/sup&gt;</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="BaselineShift" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Less-than-value" Compare="0">
			<Emit-string>&lt;/sub&gt;</Emit-string>
		</Proc-var>
	</Define-proc-list>
	<Define-proc-list Name="Table-cell-attributes">
		<Proc-var Pdf-var="ColSpan" Owner="Table" Type="Int32" Has-enum="No-enum" Inherit="Inheritable" Default="1" Condition="More-than-value" Compare="1">
			<Emit-string SP-Before="Yes" SP-After="No" NL-Before="No" NL-After="No">colspan=</Emit-string>
			<Proc-integer/>
		</Proc-var>
		<Proc-var Pdf-var="RowSpan" Owner="Table" Type="Int32" Has-enum="No-enum" Inherit="Inheritable" Default="1" Condition="More-than-value" Compare="1">
			<Emit-string SP-Before="Yes" SP-After="No" NL-Before="No" NL-After="No">rowspan=</Emit-string>
			<Proc-integer/>
		</Proc-var>
	</Define-proc-list>
	<!--@ Style attribute lists-->
	<Define-proc-list Name="Arbitrary-styles">
		<Proc-property>
			<Comment>Emit a space before the property name</Comment>
			<Emit-string SP-Before="Yes"/>
			<Property-name/>
			<Property-type Type="Fixed">
				<!--There is no way for PDF to determine &quot;Length&quot; vs &quot;Fixed&quot;.-->
				<!--There is no way for PDF to determine &quot;Pixels&quot; vs &quot;Fixed&quot;.-->
				<Emit-string>=</Emit-string>
				<Proc-fixed/>
			</Property-type>
			<Property-type Type="Int32">
				<Emit-string>=</Emit-string>
				<Proc-integer/>
			</Property-type>
			<Property-type Type="Int32">
				<Emit-string>=</Emit-string>
				<Proc-integer/>
			</Property-type>
			<Property-type Type="Atom">
				<Emit-string>=&apos;</Emit-string>
				<Proc-string/>
				<Emit-string>&apos;</Emit-string>
			</Property-type>
			<Property-type Type="String">
				<Emit-string>=&apos;</Emit-string>
				<Proc-string/>
				<Emit-string>&apos;</Emit-string>
			</Property-type>
		</Proc-property>
	</Define-proc-list>
	<Define-proc-list Name="Css-styles">
		<Walk-proplist Owner="CSS-1.00" Use-proclist="Arbitrary-styles"/>
	</Define-proc-list>
	<Define-proc-list Name="Para-styles">
		<Proc-var Pdf-var="TextAlign" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="Start" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>text-align:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Start" Value-out="left"/>
				<Proc-enum-choice Value-in="Center" Value-out="center"/>
				<Proc-enum-choice Value-in="End" Value-out="right"/>
				<Proc-enum-choice Value-in="Justify" Value-out="justify"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="SpaceAfter" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>margin-bottom:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="SpaceBefore" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>margin-top:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="EndIndent" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>margin-right:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="StartIndent" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>margin-left:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="TextIndent" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>text-indent:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="WritingMode" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="LrTb" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>direction:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="LrTb" Value-out="ltr"/>
				<Proc-enum-choice Value-in="RlTb" Value-out="rtl"/>
				<Proc-enum-choice Value-in="TbRl" Value-out="ltr"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="FontFamily" Owner="Layout" Type="String" Inherit="Inheritable" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>font-family:&apos;</Emit-string>
			<Proc-string/>
			<Emit-string>&apos;</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="FontSize" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>font-size:</Emit-string>
			<Proc-length/>
		</Proc-var>
		<Proc-var Pdf-var="FontStyle" Owner="Layout" Type="Atom" Inherit="Inheritable" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>font-style:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Normal" Value-out="normal"/>
				<Proc-enum-choice Value-in="Italic" Value-out="italic"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="FontWeight" Owner="Layout" Type="Int32" Inherit="Inheritable" Condition="Less-than-value" Compare="550">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>font-weight:normal</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="FontWeight" Owner="Layout" Type="Int32" Inherit="Inheritable" Condition="More-equal-value" Compare="550">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>font-weight:bold</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="FontStretch" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="Normal" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>font-stretch:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Normal" Value-out="normal"/>
				<Proc-enum-choice Value-in="UltraCondensed" Value-out="ultra-condensed"/>
				<Proc-enum-choice Value-in="ExtraCondensed" Value-out="extra-condensed"/>
				<Proc-enum-choice Value-in="Condensed" Value-out="condensed"/>
				<Proc-enum-choice Value-in="SemiCondensed" Value-out="semi-condensed"/>
				<Proc-enum-choice Value-in="SemiExpanded" Value-out="semi-expanded"/>
				<Proc-enum-choice Value-in="Expanded" Value-out="expanded"/>
				<Proc-enum-choice Value-in="ExtraExpanded" Value-out="extra-expanded"/>
				<Proc-enum-choice Value-in="UltraExpanded" Value-out="ultra-expanded"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="FontVariant" Owner="Layout" Type="Atom" Inherit="Inheritable" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>font-variant:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Normal" Value-out="normal"/>
				<Proc-enum-choice Value-in="SmallCaps" Value-out="small-caps"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="LineHeight" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>line-height:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="LineHeight" Owner="Layout" Type="Atom" Inherit="Inheritable" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>line-height:</Emit-string>
			<Proc-enum>
				<!--Auto is not supported by OEB/HTML/CSS: Use 'normal'-->
				<Proc-enum-choice Value-in="Auto" Value-out="normal"/>
				<Proc-enum-choice Value-in="Normal" Value-out="normal"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="TextDecorationType" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="None" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>text-decoration:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Underline" Value-out="underline"/>
				<Proc-enum-choice Value-in="Overline" Value-out="overline"/>
				<Proc-enum-choice Value-in="LineThrough" Value-out="line-through"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="Color" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Has-value">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>color:#</Emit-string>
			<Proc-color OutputHex="Yes" Uppercase="Yes"/>
		</Proc-var>
	</Define-proc-list>
	<Define-proc-list Name="List-styles">
		<Proc-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Default="None" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>list-style-type:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="None" Value-out="none"/>
				<Proc-enum-choice Value-in="Disc" Value-out="disc"/>
				<Proc-enum-choice Value-in="Circle" Value-out="circle"/>
				<Proc-enum-choice Value-in="Square" Value-out="square"/>
				<Proc-enum-choice Value-in="Decimal" Value-out="decimal"/>
				<Proc-enum-choice Value-in="LowerRoman" Value-out="lower-roman"/>
				<Proc-enum-choice Value-in="UpperRoman" Value-out="upper-roman"/>
				<Proc-enum-choice Value-in="LowerAlpha" Value-out="lower-alpha"/>
				<Proc-enum-choice Value-in="UpperAlpha" Value-out="upper-alpha"/>
			</Proc-enum>
		</Proc-var>
	</Define-proc-list>
	<Define-proc-list Name="Table-styles">
		<Proc-var Pdf-var="Placement" Owner="Layout" Type="Atom" Inherit="Not-inherited" Default="Inline" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>display:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Inline" Value-out="inline-table"/>
				<Proc-enum-choice Value-in="Block" Value-out="table"/>
				<Proc-enum-choice Value-in="Start" Value-out="table"/>
				<Proc-enum-choice Value-in="End" Value-out="table"/>
				<Proc-enum-choice Value-in="Before" Value-out="table"/>
				<Proc-enum-choice Value-in="After" Value-out="table"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="Placement" Owner="Layout" Type="Atom" Inherit="Not-inherited" Default="Inline" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>float:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Inline" Value-out="none"/>
				<Proc-enum-choice Value-in="Block" Value-out="none"/>
				<Proc-enum-choice Value-in="Start" Value-out="left"/>
				<Proc-enum-choice Value-in="End" Value-out="right"/>
				<Proc-enum-choice Value-in="Before" Value-out="left"/>
				<Proc-enum-choice Value-in="After" Value-out="right"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="InlineAlign" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="Start" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>text-align:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Start" Value-out="left"/>
				<Proc-enum-choice Value-in="Center" Value-out="center"/>
				<Proc-enum-choice Value-in="End" Value-out="right"/>
				<Proc-enum-choice Value-in="Justify" Value-out="left"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="BlockAlign" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="Before" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>vertical-align:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Before" Value-out="top"/>
				<Proc-enum-choice Value-in="Middle" Value-out="middle"/>
				<Proc-enum-choice Value-in="After" Value-out="bottom"/>
				<Proc-enum-choice Value-in="Justify" Value-out="top"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="SpaceAfter" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>margin-bottom:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="SpaceBefore" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>margin-top:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="EndIndent" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>margin-right:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="StartIndent" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>margin-left:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="WritingMode" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="LrTb" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>direction:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="LrTb" Value-out="ltr"/>
				<Proc-enum-choice Value-in="RlTb" Value-out="rtl"/>
				<Proc-enum-choice Value-in="TbRl" Value-out="ltr"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="Width" Owner="Layout" Type="Fixed" Inherit="Not-inherited" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>width:</Emit-string>
			<Proc-pixels/>
			<Emit-string SP-After="Yes">px</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="Width" Owner="Layout" Type="Atom" Inherit="Not-inherited" Default="Auto" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>width:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Auto" Value-out="Auto"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="Height" Owner="Layout" Type="Fixed" Inherit="Not-inherited" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>height:</Emit-string>
			<Proc-pixels/>
			<Emit-string>px</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="Height" Owner="Layout" Type="Atom" Inherit="Not-inherited" Default="Auto" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>height:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Auto" Value-out="Auto"/>
			</Proc-enum>
		</Proc-var>
	</Define-proc-list>
	<Define-proc-list Name="Table-row-styles">
		<Proc-var Pdf-var="BlockAlign" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="Before" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>vertical-align:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Before" Value-out="top"/>
				<Proc-enum-choice Value-in="Middle" Value-out="middle"/>
				<Proc-enum-choice Value-in="After" Value-out="bottom"/>
				<Proc-enum-choice Value-in="Justify" Value-out="top"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="Height" Owner="Layout" Type="Fixed" Inherit="Not-inherited" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>height:</Emit-string>
			<Proc-pixels/>
			<Emit-string>px</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="Height" Owner="Layout" Type="Atom" Inherit="Not-inherited" Default="Auto" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>height:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Auto" Value-out="Auto"/>
			</Proc-enum>
		</Proc-var>
	</Define-proc-list>
	<Define-proc-list Name="Table-cell-styles">
		<Proc-var Pdf-var="InlineAlign" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="Start" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>text-align:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Start" Value-out="left"/>
				<Proc-enum-choice Value-in="Center" Value-out="center"/>
				<Proc-enum-choice Value-in="End" Value-out="right"/>
				<Proc-enum-choice Value-in="Justify" Value-out="left"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="BlockAlign" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="Before" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>vertical-align:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Before" Value-out="top"/>
				<Proc-enum-choice Value-in="Middle" Value-out="middle"/>
				<Proc-enum-choice Value-in="After" Value-out="bottom"/>
				<Proc-enum-choice Value-in="Justify" Value-out="top"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="Width" Owner="Layout" Type="Fixed" Inherit="Not-inherited" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>width:</Emit-string>
			<Proc-pixels/>
			<Emit-string>px</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="Width" Owner="Layout" Type="Atom" Inherit="Not-inherited" Default="Auto" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>width:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Auto" Value-out="Auto"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="Height" Owner="Layout" Type="Fixed" Inherit="Not-inherited" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>height:</Emit-string>
			<Proc-pixels/>
			<Emit-string>px</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="Height" Owner="Layout" Type="Atom" Inherit="Not-inherited" Default="Auto" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>height:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Auto" Value-out="Auto"/>
			</Proc-enum>
		</Proc-var>
	</Define-proc-list>
	<Define-proc-list Name="Figure-styles">
		<Proc-var Pdf-var="Placement" Owner="Layout" Type="Atom" Inherit="Not-inherited" Default="Inline" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>display:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Inline" Value-out="inline"/>
				<Proc-enum-choice Value-in="Block" Value-out="block"/>
				<Proc-enum-choice Value-in="Start" Value-out="block"/>
				<Proc-enum-choice Value-in="End" Value-out="block"/>
				<Proc-enum-choice Value-in="Before" Value-out="block"/>
				<Proc-enum-choice Value-in="After" Value-out="block"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="Placement" Owner="Layout" Type="Atom" Inherit="Not-inherited" Default="Inline" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>float:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Inline" Value-out="none"/>
				<Proc-enum-choice Value-in="Block" Value-out="none"/>
				<Proc-enum-choice Value-in="Start" Value-out="left"/>
				<Proc-enum-choice Value-in="End" Value-out="right"/>
				<Proc-enum-choice Value-in="Before" Value-out="left"/>
				<Proc-enum-choice Value-in="After" Value-out="right"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="InlineAlign" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="Start" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>text-align:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Start" Value-out="left"/>
				<Proc-enum-choice Value-in="Center" Value-out="center"/>
				<Proc-enum-choice Value-in="End" Value-out="right"/>
				<Proc-enum-choice Value-in="Justify" Value-out="left"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="BlockAlign" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="Before" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>vertical-align:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Before" Value-out="top"/>
				<Proc-enum-choice Value-in="Middle" Value-out="middle"/>
				<Proc-enum-choice Value-in="After" Value-out="bottom"/>
				<Proc-enum-choice Value-in="Justify" Value-out="top"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="SpaceAfter" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>margin-bottom:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="SpaceBefore" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>margin-top:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="EndIndent" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>margin-right:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="StartIndent" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>margin-left:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="WritingMode" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="LrTb" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>direction:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="LrTb" Value-out="ltr"/>
				<Proc-enum-choice Value-in="RlTb" Value-out="rtl"/>
				<Proc-enum-choice Value-in="TbRl" Value-out="ltr"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="Width" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>width:</Emit-string>
			<Proc-pixels/>
		</Proc-var>
		<Proc-var Pdf-var="Height" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>height:</Emit-string>
			<Proc-pixels/>
		</Proc-var>
	</Define-proc-list>
	<Define-proc-list Name="Span-styles">
		<Proc-var Pdf-var="LineHeight" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Has-value">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>line-height:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="TextDecorationType" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="None" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>text-decoration:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Underline" Value-out="underline"/>
				<Proc-enum-choice Value-in="Overline" Value-out="overline"/>
				<Proc-enum-choice Value-in="LineThrough" Value-out="line-through"/>
			</Proc-enum>
		</Proc-var>
		<Evaluate-var Pdf-var="FontFamily" Owner="AutoTextStyle" Type="String" Inherit="Inheritable" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>font-family:&apos;</Emit-string>
			<Proc-string/>
			<Emit-string>&apos;</Emit-string>
			<Proc-var Pdf-var="FontFamilyAlt" Owner="AutoTextStyle" Type="String" Inherit="Inheritable" Condition="Diff-from-default-for-event">
				<Conditional-delimeter SP-After="Yes">,</Conditional-delimeter>
				<Emit-string>&apos;</Emit-string>
				<Proc-string/>
				<Emit-string>&apos;</Emit-string>
			</Proc-var>
			<Proc-var Pdf-var="FontFamilyClass" Owner="AutoTextStyle" Type="String" Inherit="Inheritable" Condition="Diff-from-default-for-event">
				<Conditional-delimeter SP-After="Yes">,</Conditional-delimeter>
				<Proc-string/>
			</Proc-var>
		</Evaluate-var>
		<Proc-var Pdf-var="FontSize" Owner="AutoTextStyle" Type="Fixed" Inherit="Inheritable" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>font-size:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="FontStyle" Owner="AutoTextStyle" Type="Atom" Inherit="Inheritable" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>font-style:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Normal" Value-out="normal"/>
				<Proc-enum-choice Value-in="Italic" Value-out="italic"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="FontStretch" Owner="AutoTextStyle" Type="Atom" Inherit="Inheritable" Default="Normal" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>font-stretch:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Normal" Value-out="normal"/>
				<Proc-enum-choice Value-in="UltraCondensed" Value-out="ultra-condensed"/>
				<Proc-enum-choice Value-in="ExtraCondensed" Value-out="extra-condensed"/>
				<Proc-enum-choice Value-in="Condensed" Value-out="condensed"/>
				<Proc-enum-choice Value-in="SemiCondensed" Value-out="semi-condensed"/>
				<Proc-enum-choice Value-in="SemiExpanded" Value-out="semi-expanded"/>
				<Proc-enum-choice Value-in="Expanded" Value-out="expanded"/>
				<Proc-enum-choice Value-in="ExtraExpanded" Value-out="extra-expanded"/>
				<Proc-enum-choice Value-in="UltraExpanded" Value-out="ultra-expanded"/>
			</Proc-enum>
		</Proc-var>
		<Evaluate-var Pdf-var="FontWeight" Owner="AutoTextStyle" Type="Int32" Inherit="Inheritable" Condition="Diff-from-default-for-event">
			<Proc-var Pdf-var="FontWeight" Owner="AutoTextStyle" Type="Int32" Inherit="Inheritable" Condition="Less-than-value" Compare="550">
				<Conditional-delimeter>;</Conditional-delimeter>
				<Emit-string SP-Before="Yes">font-weight:normal</Emit-string>
			</Proc-var>
			<Proc-var Pdf-var="FontWeight" Owner="AutoTextStyle" Type="Int32" Inherit="Inheritable" Condition="More-equal-value" Compare="550">
				<Conditional-delimeter>;</Conditional-delimeter>
				<Emit-string SP-Before="Yes">font-weight:bold</Emit-string>
			</Proc-var>
		</Evaluate-var>
		<Proc-var Pdf-var="FontVariant" Owner="AutoTextStyle" Type="Atom" Inherit="Inheritable" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>font-variant:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Normal" Value-out="normal"/>
				<Proc-enum-choice Value-in="SmallCaps" Value-out="small-caps"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="Color" Owner="AutoTextStyle" Type="Color" Inherit="Inheritable" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes" NL-After="Yes">;</Conditional-delimeter>
			<Emit-string>color:#</Emit-string>
			<Proc-color OutputHex="Yes" Uppercase="Yes"/>
		</Proc-var>
		<Proc-var Pdf-var="BackgroundColor" Owner="Layout" Type="Color" Inherit="Not-inherited" Condition="Diff-from-default-for-event">
			<Conditional-delimeter SP-After="Yes">;</Conditional-delimeter>
			<Emit-string>background-color:#</Emit-string>
			<Proc-color OutputHex="Yes"/>
		</Proc-var>
		<Evaluate-var Pdf-var="BorderStyle" Owner="Layout" Type="Atom" Inherit="Not-inherited" Condition="Has-value">
			<Proc-var Pdf-var="BorderStyle" Owner="Layout" Type="Atom" Inherit="Not-inherited" Default="None" Condition="Diff-from-default-or-parent">
				<Conditional-delimeter SP-After="Yes">;</Conditional-delimeter>
				<Emit-string>border-style:</Emit-string>
				<Proc-enum>
					<Proc-enum-choice Value-in="None" Value-out="none"/>
					<Proc-enum-choice Value-in="Hidden" Value-out="none"/>
					<Proc-enum-choice Value-in="Dotted" Value-out="dotted"/>
					<Proc-enum-choice Value-in="Dashed" Value-out="dashed"/>
					<Proc-enum-choice Value-in="Solid" Value-out="solid"/>
					<Proc-enum-choice Value-in="Double" Value-out="double"/>
					<Proc-enum-choice Value-in="Groove" Value-out="groove"/>
					<Proc-enum-choice Value-in="Ridge" Value-out="ridge"/>
					<Proc-enum-choice Value-in="Inset" Value-out="inset"/>
					<Proc-enum-choice Value-in="Outset" Value-out="outset"/>
				</Proc-enum>
			</Proc-var>
		</Evaluate-var>
		<Evaluate-var Pdf-var="BorderStyle" Owner="Layout" Type="Atom" Inherit="Not-inherited" Condition="No-value">
			<Evaluate-var Pdf-var="BorderBeforeStyle" Owner="Layout" Type="Atom" Inherit="Not-inherited" Condition="Has-value">
				<Conditional-delimeter>; border-style:</Conditional-delimeter>
				<Proc-var Pdf-var="BorderBeforeStyle" Owner="Layout" Type="Atom" Inherit="Not-inherited" Default="None" Condition="Always">
					<Emit-string SP-Before="Yes"/>
					<Proc-enum>
						<Proc-enum-choice Value-in="None" Value-out="none"/>
						<Proc-enum-choice Value-in="Hidden" Value-out="none"/>
						<Proc-enum-choice Value-in="Dotted" Value-out="dotted"/>
						<Proc-enum-choice Value-in="Dashed" Value-out="dashed"/>
						<Proc-enum-choice Value-in="Solid" Value-out="solid"/>
						<Proc-enum-choice Value-in="Double" Value-out="double"/>
						<Proc-enum-choice Value-in="Groove" Value-out="groove"/>
						<Proc-enum-choice Value-in="Ridge" Value-out="ridge"/>
						<Proc-enum-choice Value-in="Inset" Value-out="inset"/>
						<Proc-enum-choice Value-in="Outset" Value-out="outset"/>
					</Proc-enum>
				</Proc-var>
				<Proc-var Pdf-var="BorderEndStyle" Owner="Layout" Type="Atom" Inherit="Not-inherited" Default="None" Condition="Always">
					<Emit-string SP-Before="Yes"/>
					<Proc-enum>
						<Proc-enum-choice Value-in="None" Value-out="none"/>
						<Proc-enum-choice Value-in="Hidden" Value-out="none"/>
						<Proc-enum-choice Value-in="Dotted" Value-out="dotted"/>
						<Proc-enum-choice Value-in="Dashed" Value-out="dashed"/>
						<Proc-enum-choice Value-in="Solid" Value-out="solid"/>
						<Proc-enum-choice Value-in="Double" Value-out="double"/>
						<Proc-enum-choice Value-in="Groove" Value-out="groove"/>
						<Proc-enum-choice Value-in="Ridge" Value-out="ridge"/>
						<Proc-enum-choice Value-in="Inset" Value-out="inset"/>
						<Proc-enum-choice Value-in="Outset" Value-out="outset"/>
					</Proc-enum>
				</Proc-var>
				<Proc-var Pdf-var="BorderAfterStyle" Owner="Layout" Type="Atom" Inherit="Not-inherited" Default="None" Condition="Always">
					<Emit-string SP-Before="Yes"/>
					<Proc-enum>
						<Proc-enum-choice Value-in="None" Value-out="none"/>
						<Proc-enum-choice Value-in="Hidden" Value-out="none"/>
						<Proc-enum-choice Value-in="Dotted" Value-out="dotted"/>
						<Proc-enum-choice Value-in="Dashed" Value-out="dashed"/>
						<Proc-enum-choice Value-in="Solid" Value-out="solid"/>
						<Proc-enum-choice Value-in="Double" Value-out="double"/>
						<Proc-enum-choice Value-in="Groove" Value-out="groove"/>
						<Proc-enum-choice Value-in="Ridge" Value-out="ridge"/>
						<Proc-enum-choice Value-in="Inset" Value-out="inset"/>
						<Proc-enum-choice Value-in="Outset" Value-out="outset"/>
					</Proc-enum>
				</Proc-var>
				<Proc-var Pdf-var="BorderStartStyle" Owner="Layout" Type="Atom" Inherit="Not-inherited" Default="None" Condition="Always">
					<Emit-string SP-Before="Yes"/>
					<Proc-enum>
						<Proc-enum-choice Value-in="None" Value-out="none"/>
						<Proc-enum-choice Value-in="Hidden" Value-out="none"/>
						<Proc-enum-choice Value-in="Dotted" Value-out="dotted"/>
						<Proc-enum-choice Value-in="Dashed" Value-out="dashed"/>
						<Proc-enum-choice Value-in="Solid" Value-out="solid"/>
						<Proc-enum-choice Value-in="Double" Value-out="double"/>
						<Proc-enum-choice Value-in="Groove" Value-out="groove"/>
						<Proc-enum-choice Value-in="Ridge" Value-out="ridge"/>
						<Proc-enum-choice Value-in="Inset" Value-out="inset"/>
						<Proc-enum-choice Value-in="Outset" Value-out="outset"/>
					</Proc-enum>
				</Proc-var>
			</Evaluate-var>
		</Evaluate-var>
		<Evaluate-var Pdf-var="BorderColor" Owner="Layout" Type="Color" Inherit="Inheritable" Condition="Has-value">
			<Conditional-delimeter SP-After="Yes">;</Conditional-delimeter>
			<Emit-string>border-color:#</Emit-string>
			<Proc-color OutputHex="Yes"/>
		</Evaluate-var>
		<Evaluate-var Pdf-var="BorderColor" Owner="Layout" Type="Color" Inherit="Inheritable" Condition="No-value">
			<Evaluate-var Pdf-var="BorderBeforeColor" Owner="Layout" Type="Color" Inherit="Inheritable" Condition="Has-value">
				<Conditional-delimeter>; border-color:</Conditional-delimeter>
				<Proc-var Pdf-var="BorderBeforeColor" Owner="Layout" Type="Color" Inherit="Inheritable" Condition="Always">
					<Emit-string SP-Before="Yes">#</Emit-string>
					<Proc-color OutputHex="Yes"/>
				</Proc-var>
				<Proc-var Pdf-var="BorderEndStyle" Owner="Layout" Type="Color" Inherit="Inheritable" Condition="Always">
					<Emit-string SP-Before="Yes">#</Emit-string>
					<Proc-color OutputHex="Yes"/>
				</Proc-var>
				<Proc-var Pdf-var="BorderAfterStyle" Owner="Layout" Type="Color" Inherit="Not-inherited" Condition="Always">
					<Emit-string SP-Before="Yes">#</Emit-string>
					<Proc-color OutputHex="Yes"/>
				</Proc-var>
				<Proc-var Pdf-var="BorderStartStyle" Owner="Layout" Type="Color" Inherit="Not-inherited" Condition="Always">
					<Emit-string SP-Before="Yes">#</Emit-string>
					<Proc-color OutputHex="Yes"/>
				</Proc-var>
			</Evaluate-var>
		</Evaluate-var>
		<Evaluate-var Pdf-var="BorderThickness" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Has-value">
			<Conditional-delimeter SP-After="Yes">;</Conditional-delimeter>
			<Emit-string>border-width:</Emit-string>
			<Proc-pixels/>
			<Emit-string>px</Emit-string>
		</Evaluate-var>
		<Evaluate-var Pdf-var="BorderThickness" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="No-value">
			<Evaluate-var Pdf-var="BorderBeforeThickness" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Has-value">
				<Conditional-delimeter>; border-thickness:</Conditional-delimeter>
				<Proc-var Pdf-var="BorderBeforeThickness" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Always">
					<Proc-pixels/>
					<Emit-string SP-After="Yes">px</Emit-string>
				</Proc-var>
				<Proc-var Pdf-var="BorderEndThickness" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Always">
					<Proc-pixels/>
					<Emit-string SP-After="Yes">px</Emit-string>
				</Proc-var>
				<Proc-var Pdf-var="BorderAfterThickness" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Always">
					<Proc-pixels/>
					<Emit-string SP-After="Yes">px</Emit-string>
				</Proc-var>
				<Proc-var Pdf-var="BorderStartThickness" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Always">
					<Proc-pixels/>
					<Emit-string>px</Emit-string>
				</Proc-var>
			</Evaluate-var>
		</Evaluate-var>
		<Evaluate-var Pdf-var="Padding" Owner="Layout" Type="Fixed" Inherit="Not-inherited" Condition="Has-value">
			<Conditional-delimeter SP-After="Yes">;</Conditional-delimeter>
			<Emit-string>padding:</Emit-string>
			<Proc-pixels/>
			<Emit-string>px</Emit-string>
		</Evaluate-var>
		<Evaluate-var Pdf-var="Padding" Owner="Layout" Type="Fixed" Inherit="Not-inherited" Condition="No-value">
			<Evaluate-var Pdf-var="PaddingBefore" Owner="Layout" Type="Fixed" Inherit="Not-inherited" Condition="Has-value">
				<Conditional-delimeter>; padding:</Conditional-delimeter>
				<Proc-var Pdf-var="PaddingBefore" Owner="Layout" Type="Fixed" Inherit="Not-inherited" Condition="Always">
					<Proc-pixels/>
					<Emit-string SP-After="Yes">px</Emit-string>
				</Proc-var>
				<Proc-var Pdf-var="PaddingEnd" Owner="Layout" Type="Fixed" Inherit="Not-inherited" Condition="Always">
					<Proc-pixels/>
					<Emit-string SP-After="Yes">px</Emit-string>
				</Proc-var>
				<Proc-var Pdf-var="PaddingAfter" Owner="Layout" Type="Fixed" Inherit="Not-inherited" Condition="Always">
					<Proc-pixels/>
					<Emit-string SP-After="Yes">px</Emit-string>
				</Proc-var>
				<Proc-var Pdf-var="PaddingStart" Owner="Layout" Type="Fixed" Inherit="Not-inherited" Condition="Always">
					<Proc-pixels/>
					<Emit-string>px</Emit-string>
				</Proc-var>
			</Evaluate-var>
		</Evaluate-var>
		<Evaluate-var Pdf-var="TPadding" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Has-value">
			<Conditional-delimeter SP-After="Yes">;</Conditional-delimeter>
			<Emit-string>padding:</Emit-string>
			<Proc-pixels/>
			<Emit-string>px</Emit-string>
		</Evaluate-var>
		<Evaluate-var Pdf-var="TPadding" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="No-value">
			<Evaluate-var Pdf-var="TPaddingBefore" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Has-value">
				<Conditional-delimeter>; padding:</Conditional-delimeter>
				<Proc-var Pdf-var="TPaddingBefore" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Always">
					<Proc-pixels/>
					<Emit-string SP-After="Yes">px</Emit-string>
				</Proc-var>
				<Proc-var Pdf-var="TPaddingEnd" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Always">
					<Proc-pixels/>
					<Emit-string SP-After="Yes">px</Emit-string>
				</Proc-var>
				<Proc-var Pdf-var="TPaddingAfter" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Always">
					<Proc-pixels/>
					<Emit-string SP-After="Yes">px</Emit-string>
				</Proc-var>
				<Proc-var Pdf-var="TPaddingStart" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Always">
					<Proc-pixels/>
					<Emit-string>px</Emit-string>
				</Proc-var>
			</Evaluate-var>
		</Evaluate-var>
	</Define-proc-list>
	<!--@ Cached style rule lists-->
	<Define-proc-list Name="Cached-span-styles">
		<Proc-var Pdf-var="LineHeight" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">line-height:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="LineHeight" Owner="Layout" Type="Atom" Inherit="Inheritable" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">line-height:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Auto" Value-out="normal"/>
				<Proc-enum-choice Value-in="Normal" Value-out="normal"/>
			</Proc-enum>
			<!--Auto is not supported by HTML/CSS: Use &apos;normal&apos;-->
		</Proc-var>
		<Proc-var Pdf-var="TextDecoration" Owner="Layout" Type="Atom" Inherit="Inheritable" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">text-decoration:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Underline" Value-out="underline"/>
				<Proc-enum-choice Value-in="Overline" Value-out="overline"/>
				<Proc-enum-choice Value-in="LineThrough" Value-out="line-through"/>
			</Proc-enum>
		</Proc-var>
		<Evaluate-var Pdf-var="FontFamily" Owner="AutoTextStyle" Type="String" Inherit="Inheritable" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">font-family:&apos;</Emit-string>
			<Proc-string Expand-entities="No-entities"/>
			<Emit-string>&apos;</Emit-string>
			<Proc-var Pdf-var="FontFamilyAlt" Owner="AutoTextStyle" Type="String" Inherit="Inheritable" Condition="Has-value">
				<Conditional-delimeter>,</Conditional-delimeter>
				<Emit-string>&apos;</Emit-string>
				<Proc-string/>
				<Emit-string>&apos;</Emit-string>
			</Proc-var>
			<Proc-var Pdf-var="FontFamilyClass" Owner="AutoTextStyle" Type="String" Inherit="Inheritable" Condition="Has-value">
				<Conditional-delimeter>,</Conditional-delimeter>
				<Proc-string/>
			</Proc-var>
		</Evaluate-var>
		<Proc-var Pdf-var="FontSize" Owner="AutoTextStyle" Type="Fixed" Inherit="Inheritable" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">font-size:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="FontStyle" Owner="AutoTextStyle" Type="Atom" Inherit="Inheritable" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">font-style:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Normal" Value-out="normal"/>
				<Proc-enum-choice Value-in="Italic" Value-out="italic"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="FontWeight" Owner="AutoTextStyle" Type="Int32" Inherit="Inheritable" Condition="Less-than-value" Compare="550">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">font-weight:normal</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="FontWeight" Owner="AutoTextStyle" Type="Int32" Inherit="Inheritable" Condition="More-equal-value" Compare="550">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">font-weight:bold</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="FontStretch" Owner="AutoTextStyle" Type="Atom" Inherit="Inheritable" Default="Normal" Condition="Diff-from-default-for-event">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">font-stretch:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Normal" Value-out="normal"/>
				<Proc-enum-choice Value-in="UltraCondensed" Value-out="ultra-condensed"/>
				<Proc-enum-choice Value-in="ExtraCondensed" Value-out="extra-condensed"/>
				<Proc-enum-choice Value-in="Condensed" Value-out="condensed"/>
				<Proc-enum-choice Value-in="SemiCondensed" Value-out="semi-condensed"/>
				<Proc-enum-choice Value-in="SemiExpanded" Value-out="semi-expanded"/>
				<Proc-enum-choice Value-in="Expanded" Value-out="expanded"/>
				<Proc-enum-choice Value-in="ExtraExpanded" Value-out="extra-expanded"/>
				<Proc-enum-choice Value-in="UltraExpanded" Value-out="ultra-expanded"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="FontVariant" Owner="AutoTextStyle" Type="Atom" Inherit="Inheritable" Default="Normal" Condition="Diff-from-default-for-event">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">font-variant:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Normal" Value-out="normal"/>
				<Proc-enum-choice Value-in="SmallCaps" Value-out="small-caps"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="Color" Owner="AutoTextStyle" Type="Color" Inherit="Inheritable" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">color:#</Emit-string>
			<Proc-color OutputHex="Yes"/>
		</Proc-var>
	</Define-proc-list>
	<Define-proc-list Name="Cached-para-styles">
		<Proc-var Pdf-var="TextAlign" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="Start" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">text-align:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Start" Value-out="left"/>
				<Proc-enum-choice Value-in="Center" Value-out="center"/>
				<Proc-enum-choice Value-in="End" Value-out="right"/>
				<Proc-enum-choice Value-in="Justify" Value-out="justify"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="SpaceAfter" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">margin-bottom:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="SpaceBefore" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">margin-top:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="EndIndent" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">margin-right:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="StartIndent" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">margin-left:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="TextIndent" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">text-indent:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="WritingMode" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="LrTb" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">direction:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="LrTb" Value-out="ltr"/>
				<Proc-enum-choice Value-in="RlTb" Value-out="rtl"/>
				<Proc-enum-choice Value-in="TbRl" Value-out="ltr"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="LineHeight" Owner="Layout" Type="Fixed" Inherit="Inheritable" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">line-height:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="LineHeight" Owner="Layout" Type="Atom" Inherit="Inheritable" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">line-height:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Auto" Value-out="normal"/>
				<Proc-enum-choice Value-in="Normal" Value-out="normal"/>
			</Proc-enum>
			<!--Auto is not supported by OEB/HTML/CSS: Use &apos;normal&apos;-->
		</Proc-var>
		<Proc-var Pdf-var="TextDecoration" Owner="Layout" Type="Atom" Inherit="Inheritable" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">text-decoration:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Underline" Value-out="underline"/>
				<Proc-enum-choice Value-in="Overline" Value-out="overline"/>
				<Proc-enum-choice Value-in="LineThrough" Value-out="line-through"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="Color" Owner="Layout" Type="Color" Inherit="Inheritable" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">color:#</Emit-string>
			<Proc-color OutputHex="Yes"/>
		</Proc-var>
	</Define-proc-list>
	<Define-proc-list Name="Cached-list-styles">
		<Proc-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Default="None" Condition="Always">
			<!--No corresponding PDF-state info, need to synthesize list-type.-->
			<!--How to deal with numbered and dictionary lists ???-->
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">list-style-type:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="None" Value-out="none"/>
				<Proc-enum-choice Value-in="Disc" Value-out="disc"/>
				<Proc-enum-choice Value-in="Circle" Value-out="circle"/>
				<Proc-enum-choice Value-in="Square" Value-out="square"/>
				<Proc-enum-choice Value-in="Decimal" Value-out="decimal"/>
				<Proc-enum-choice Value-in="LowerRoman" Value-out="lower-roman"/>
				<Proc-enum-choice Value-in="UpperRoman" Value-out="upper-roman"/>
				<Proc-enum-choice Value-in="LowerAlpha" Value-out="lower-alpha"/>
				<Proc-enum-choice Value-in="UpperAlpha" Value-out="upper-alpha"/>
			</Proc-enum>
		</Proc-var>
	</Define-proc-list>
	<Define-proc-list Name="Cached-table-styles">
		<Proc-var Pdf-var="InlineAlign" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="Start" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">text-align:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Start" Value-out="left"/>
				<Proc-enum-choice Value-in="Center" Value-out="center"/>
				<Proc-enum-choice Value-in="End" Value-out="right"/>
				<Proc-enum-choice Value-in="Justify" Value-out="left"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="BlockAlign" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="Before" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">vertical-align:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Before" Value-out="top"/>
				<Proc-enum-choice Value-in="Middle" Value-out="middle"/>
				<Proc-enum-choice Value-in="After" Value-out="bottom"/>
				<Proc-enum-choice Value-in="Justify" Value-out="top"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="SpaceAfter" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">margin-bottom:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="SpaceBefore" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">margin-top:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="EndIndent" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">margin-right:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="StartIndent" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">margin-left:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="WritingMode" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="LrTb" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">direction:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="LrTb" Value-out="ltr"/>
				<Proc-enum-choice Value-in="RlTb" Value-out="rtl"/>
				<Proc-enum-choice Value-in="TbRl" Value-out="ltr"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="Width" Owner="Layout" Type="Atom" Inherit="Not-inherited" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">width: Auto</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="Width" Owner="Layout" Type="Fixed" Inherit="Not-inherited" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">width:</Emit-string>
			<Proc-pixels/>
			<Emit-string>px</Emit-string>
		</Proc-var>
		<Evaluate-var Pdf-var="Width" Owner="Layout" Type="Atom" Inherit="Not-inherited" Condition="No-value">
			<Evaluate-var Pdf-var="Width" Owner="Layout" Type="Fixed" Inherit="Not-inherited" Condition="No-value">
				<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
				<Emit-string SP-Before="Yes">width: Auto</Emit-string>
			</Evaluate-var>
		</Evaluate-var>
		<Proc-var Pdf-var="Height" Owner="Layout" Type="Fixed" Inherit="Not-inherited" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">height:</Emit-string>
			<Proc-pixels/>
			<Emit-string>px</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="Height" Owner="Layout" Type="Atom" Inherit="Not-inherited" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">height: Auto</Emit-string>
		</Proc-var>
		<Evaluate-var Pdf-var="Height" Owner="Layout" Type="Fixed" Inherit="Not-inherited" Condition="No-value">
			<Evaluate-var Pdf-var="Height" Owner="Layout" Type="Atom" Inherit="Not-inherited" Condition="No-value">
				<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
				<Emit-string SP-Before="Yes">height: Auto</Emit-string>
			</Evaluate-var>
		</Evaluate-var>
		<Proc-var Pdf-var="Placement" Owner="Layout" Type="Atom" Inherit="Not-inherited" Default="Inline" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">display:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Inline" Value-out="inline-table"/>
				<Proc-enum-choice Value-in="Block" Value-out="table"/>
				<Proc-enum-choice Value-in="Start" Value-out="table"/>
				<Proc-enum-choice Value-in="End" Value-out="table"/>
				<Proc-enum-choice Value-in="Before" Value-out="table"/>
				<Proc-enum-choice Value-in="After" Value-out="table"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="Placement" Owner="Layout" Type="Atom" Inherit="Not-inherited" Default="Inline" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">float:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Inline" Value-out="none"/>
				<Proc-enum-choice Value-in="Block" Value-out="none"/>
				<Proc-enum-choice Value-in="Start" Value-out="left"/>
				<Proc-enum-choice Value-in="End" Value-out="right"/>
				<Proc-enum-choice Value-in="Before" Value-out="left"/>
				<Proc-enum-choice Value-in="After" Value-out="right"/>
			</Proc-enum>
		</Proc-var>
	</Define-proc-list>
	<Define-proc-list Name="Cached-table-row-styles">
		<Proc-var Pdf-var="BlockAlign" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="Before" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">vertical-align:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Before" Value-out="top"/>
				<Proc-enum-choice Value-in="Middle" Value-out="middle"/>
				<Proc-enum-choice Value-in="After" Value-out="bottom"/>
				<Proc-enum-choice Value-in="Justify" Value-out="top"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="Height" Owner="Layout" Type="Fixed" Inherit="Not-inherited" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">height:</Emit-string>
			<Proc-pixels/>
			<Emit-string>px</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="Height" Owner="Layout" Type="Atom" Inherit="Not-inherited" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">height:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Auto" Value-out="Auto"/>
			</Proc-enum>
		</Proc-var>
	</Define-proc-list>
	<Define-proc-list Name="Cached-table-cell-styles">
		<Proc-var Pdf-var="InlineAlign" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="Start" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">text-align:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Start" Value-out="left"/>
				<Proc-enum-choice Value-in="Center" Value-out="center"/>
				<Proc-enum-choice Value-in="End" Value-out="right"/>
				<Proc-enum-choice Value-in="Justify" Value-out="left"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="BlockAlign" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="Before" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">vertical-align:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Before" Value-out="top"/>
				<Proc-enum-choice Value-in="Middle" Value-out="middle"/>
				<Proc-enum-choice Value-in="After" Value-out="bottom"/>
				<Proc-enum-choice Value-in="Justify" Value-out="top"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="Width" Owner="Layout" Type="Fixed" Inherit="Not-inherited" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">width:</Emit-string>
			<Proc-pixels/>
			<Emit-string SP-After="Yes">px</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="Width" Owner="Layout" Type="Atom" Inherit="Not-inherited" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">width:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Auto" Value-out="Auto"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="Height" Owner="Layout" Type="Fixed" Inherit="Not-inherited" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">height:</Emit-string>
			<Proc-pixels/>
			<Emit-string SP-After="Yes">px</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="Height" Owner="Layout" Type="Atom" Inherit="Not-inherited" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">height:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Auto" Value-out="Auto"/>
			</Proc-enum>
		</Proc-var>
	</Define-proc-list>
	<Define-proc-list Name="Cached-figure-styles">
		<Proc-var Pdf-var="InlineAlign" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="Start" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">text-align:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Start" Value-out="left"/>
				<Proc-enum-choice Value-in="Center" Value-out="center"/>
				<Proc-enum-choice Value-in="End" Value-out="right"/>
				<Proc-enum-choice Value-in="Justify" Value-out="left"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="BlockAlign" Owner="Layout" Type="Atom" Inherit="Inheritable" Default="Before" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">vertical-align:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="Before" Value-out="top"/>
				<Proc-enum-choice Value-in="Middle" Value-out="middle"/>
				<Proc-enum-choice Value-in="After" Value-out="bottom"/>
				<Proc-enum-choice Value-in="Justify" Value-out="top"/>
			</Proc-enum>
		</Proc-var>
		<Proc-var Pdf-var="SpaceAfter" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">margin-bottom:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="SpaceBefore" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">margin-top:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="EndIndent" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">margin-right:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="StartIndent" Owner="Layout" Type="Fixed" Inherit="Inheritable" Default="0" Condition="Always">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">margin-left:</Emit-string>
			<Proc-length/>
			<Emit-string>pt</Emit-string>
		</Proc-var>
		<Proc-var Pdf-var="WritingMode" Owner="Layout" Type="Atom" Inherit="Inheritable" Condition="Has-value">
			<Conditional-delimeter NL-After="Yes">;</Conditional-delimeter>
			<Emit-string SP-Before="Yes">direction:</Emit-string>
			<Proc-enum>
				<Proc-enum-choice Value-in="LrTb" Value-out="ltr"/>
				<Proc-enum-choice Value-in="RlTb" Value-out="rtl"/>
				<Proc-enum-choice Value-in="TbRl" Value-out="ltr"/>
			</Proc-enum>
		</Proc-var>
	</Define-proc-list>
	<!-- ===== Defined Event-lists =====-->
	<Define-event-list Name="Css-cached-styles">
		<Comment>----------Builds CSS selector rules----------</Comment>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Div" Alternate-name="Division" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">div {</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Doc" Alternate-name="Document" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">div[class="Document"]
{</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Art" Alternate-name="Article" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">div[class="Article"]
{</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Part" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">div[class="Part"]
{</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Sect" Alternate-name="Section" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">div[class="Sect"]
{</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H" Alternate-name="Heading" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">h1 {</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H1" Alternate-name="Heading1" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">h1 {</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H2" Alternate-name="Heading2" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">h2 {</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H3" Alternate-name="Heading3" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">h3 {</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H4" Alternate-name="Heading4" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">h4 {</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H5" Alternate-name="Heading5" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">h5 {</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H6" Alternate-name="Heading6" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">h6 {</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="P" Alternate-name="Paragraph" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">p {</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Blockquote" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">blockquote {</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="BibEntry" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">div[class="BibEntry"] {</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Index" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">div[class="Index"] {</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TOC" Alternate-name="TableOfContents" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">div[class="TOC"] {</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TOCI" Alternate-name="ContentItem" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">div[class="TOCI"] {</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="UL" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">ul {</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="OL" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">ol {</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="DL" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">dl {</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="L" Alternate-name="List" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="No-value">
				<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
					<Conditional-prefix NL-After="Yes">dl {</Conditional-prefix>
					<Call-proc-list Name="Cached-para-styles"/>
					<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
				</Evaluate-var>
				<Walk-children Use-event-list="Css-cached-styles"/>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="None">
				<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
					<Conditional-prefix NL-After="Yes">dl {</Conditional-prefix>
					<Call-proc-list Name="Cached-para-styles"/>
					<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
				</Evaluate-var>
				<Walk-children Use-event-list="Css-cached-styles"/>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="Disc">
				<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
					<Conditional-prefix NL-After="Yes">ul {</Conditional-prefix>
					<Call-proc-list Name="List-styles"/>
					<Call-proc-list Name="Cached-para-styles"/>
					<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
				</Evaluate-var>
				<Walk-children Use-event-list="Css-cached-styles"/>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="Circle">
				<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
					<Conditional-prefix NL-After="Yes">ul {</Conditional-prefix>
					<Call-proc-list Name="Cached-list-styles"/>
					<Call-proc-list Name="Cached-para-styles"/>
					<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
				</Evaluate-var>
				<Walk-children Use-event-list="Css-cached-styles"/>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="Square">
				<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
					<Conditional-prefix NL-After="Yes">ul {</Conditional-prefix>
					<Call-proc-list Name="Cached-list-styles"/>
					<Call-proc-list Name="Cached-para-styles"/>
					<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
				</Evaluate-var>
				<Walk-children Use-event-list="Css-cached-styles"/>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="Decimal">
				<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
					<Conditional-prefix NL-After="Yes">ol {</Conditional-prefix>
					<Call-proc-list Name="Cached-list-styles"/>
					<Call-proc-list Name="Cached-para-styles"/>
					<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
				</Evaluate-var>
				<Walk-children Use-event-list="Css-cached-styles"/>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="LowerRoman">
				<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
					<Conditional-prefix NL-After="Yes">ol {</Conditional-prefix>
					<Call-proc-list Name="Cached-list-styles"/>
					<Call-proc-list Name="Cached-para-styles"/>
					<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
				</Evaluate-var>
				<Walk-children Use-event-list="Css-cached-styles"/>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="UpperRoman">
				<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
					<Conditional-prefix NL-After="Yes">ol {</Conditional-prefix>
					<Call-proc-list Name="Cached-list-styles"/>
					<Call-proc-list Name="Cached-para-styles"/>
					<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
				</Evaluate-var>
				<Walk-children Use-event-list="Css-cached-styles"/>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="LowerAlpha">
				<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
					<Conditional-prefix NL-After="Yes">ol {</Conditional-prefix>
					<Call-proc-list Name="Cached-list-styles"/>
					<Call-proc-list Name="Cached-para-styles"/>
					<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
				</Evaluate-var>
				<Walk-children Use-event-list="Css-cached-styles"/>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="UpperAlpha">
				<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
					<Conditional-prefix NL-After="Yes">ol {</Conditional-prefix>
					<Call-proc-list Name="Cached-list-styles"/>
					<Call-proc-list Name="Cached-para-styles"/>
					<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
				</Evaluate-var>
				<Walk-children Use-event-list="Css-cached-styles"/>
			</Evaluate-var>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="LI" Alternate-name="ListItem" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">li {</Conditional-prefix>
				<Call-proc-list Name="Cached-list-styles"/>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Lbl" Alternate-name="Label" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">dt {</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="LBody" Alternate-name="ListBody" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">dd {</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Span" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">span {</Conditional-prefix>
				<Call-proc-list Name="Cached-span-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Quote" Alternate-name="Q" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">q {</Conditional-prefix>
				<Call-proc-list Name="Cached-span-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Link" Alternate-name="A" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Comment>Link placeholder</Comment>
				<Conditional-prefix NL-After="Yes">a {</Conditional-prefix>
				<Call-proc-list Name="Cached-span-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Code" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">code {</Conditional-prefix>
				<Call-proc-list Name="Cached-span-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Table" Alternate-name="Tbl" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">table {</Conditional-prefix>
				<Emit-string SP-Before="Yes">border-collapse:collapse</Emit-string>
				<Call-proc-list Name="Cached-table-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Caption" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">caption {</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="TableHeader" Alternate-name="TableHead" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">thead {</Conditional-prefix>
				<Call-proc-list Name="Cached-table-row-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="TableBody" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">tbody {</Conditional-prefix>
				<Call-proc-list Name="Cached-table-row-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="TableFooter" Alternate-name="TableFoot" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">tfoot {</Conditional-prefix>
				<Call-proc-list Name="Cached-table-row-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TableHeader" Alternate-name="THead" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">thead {</Conditional-prefix>
				<Call-proc-list Name="Cached-table-row-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TableBody" Alternate-name="TBody" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">tbody {</Conditional-prefix>
				<Call-proc-list Name="Cached-table-row-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TableFooter" Alternate-name="TFoot" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">tfoot {</Conditional-prefix>
				<Call-proc-list Name="Cached-table-row-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TR" Alternate-name="TableRow" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">tr {</Conditional-prefix>
				<Call-proc-list Name="Cached-table-row-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TH" Alternate-name="TableHeaderCell" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">th {</Conditional-prefix>
				<Call-proc-list Name="Cached-table-cell-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TD" Alternate-name="TableDataCell" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">td { </Conditional-prefix>
				<Call-proc-list Name="Cached-table-cell-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Figure" Alternate-name="Img" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">img {</Conditional-prefix>
				<Call-proc-list Name="Cached-figure-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Note" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="isCached" Owner="Style-cache" Type="String" Inherit="Not-inherited" Condition="Matches-value" Compare="0">
				<Conditional-prefix NL-After="Yes">div[class="Note"]
{</Conditional-prefix>
				<Call-proc-list Name="Cached-para-styles"/>
				<Conditional-suffix NL-Before="Yes" NL-After="Yes">}</Conditional-suffix>
			</Evaluate-var>
			<Walk-children Use-event-list="Css-cached-styles"/>
		</Event>
	</Define-event-list>
	<Define-event-list Name="list-elements">
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="LI" Alternate-name="ListItem" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;LI</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="List-styles"/>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="list-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="LI" Alternate-name="ListItem" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/LI&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="LBody" Alternate-name="ListBody" Node-content="Has-kids" Event-class="Enter">
			<!--No wrapper tag is issued for LBody in numbered/unnumbered lists for HTML-4.01-->
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<!--Lbl and its content is discarded in lists for HTML-4.01-->
		<Call-event-list Name="content-elements"/>
	</Define-event-list>
	<Define-event-list Name="dictionary-list-elements">
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="LI" Alternate-name="ListItem" Node-content="Has-kids" Event-class="Enter">
			<!--No tag issued for LI within a DL for HTML-4.01-->
			<Walk-children Use-event-list="dictionary-list-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Lbl" Alternate-name="Label" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;dt</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="List-styles"/>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Lbl" Alternate-name="Label" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/dt&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="LBody" Alternate-name="ListBody" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;dd</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Call-proc-list Name="Span-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="List-styles"/>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="LBody" Alternate-name="ListBody" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/dd&gt;</Emit-string>
		</Event>
		<Call-event-list Name="content-elements"/>
	</Define-event-list>
	<Define-event-list Name="formula-contents">
		<Event Inf-type="Pds-mc" Name-type="Any" Node-content="Has-text-only" Event-class="Enter">
			<Emit-string SP-After="Yes">&lt;span</Emit-string>
			<Call-proc-list Name="Span-element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Call-proc-list Name="Span-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Mcc-styles"/>
			<Call-proc-list Name="Figure-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string>&gt;</Emit-string>
			<Proc-doc-text do-br-substitution="do-xml-br-substitution"/>
			<Emit-string>&lt;/span&gt;</Emit-string>
		</Event>
		<Event Inf-type="Pds-mc" Name-type="Any" Node-content="Has-kids" Event-class="Enter">
			<Emit-string SP-After="Yes">&lt;span</Emit-string>
			<Call-proc-list Name="Span-element-attributes"/>
			<Call-proc-list Name="Span-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Mcc-styles"/>
			<Call-proc-list Name="Figure-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string>&gt;</Emit-string>
			<Proc-doc-text do-br-substitution="do-xml-br-substitution"/>
			<Emit-string>&lt;/span&gt;</Emit-string>
		</Event>
		<Event Inf-type="Pds-mc" Name-type="Any" Node-content="Image" Event-class="Enter">
			<Emit-string>&lt;img</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Figure-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string SP-Before="Yes" NL-Before="Yes">src=&quot;</Emit-string>
			<Proc-image-content/>
		</Event>
		<Event Inf-type="Pds-mc" Name-type="Any" Node-content="Image" Event-class="Exit">
			<Emit-string>&quot; /&gt;</Emit-string>
		</Event>
		<Event Inf-type="Pds-mc" Name-type="Any" Node-content="Graphic" Event-class="Enter">
			<Emit-string>&lt;img</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Figure-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string SP-Before="Yes" NL-Before="Yes">src=&quot;</Emit-string>
			<Proc-image-content/>
		</Event>
		<Event Inf-type="Pds-mc" Name-type="Any" Node-content="Graphic" Event-class="Exit">
			<Emit-string>&quot; /&gt;</Emit-string>
		</Event>
	</Define-event-list>
	<Define-event-list Name="table-head-contents">
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Caption" Node-content="Has-kids" Event-class="Enter">
			<!--In HTML-4.01, &lt;CAPTION&gt; is child of &lt;TABLE&gt;; in XSL is peer under &lt;fo:table-and-caption&gt;.-->
			<Emit-string>&lt;caption</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Proc-var Pdf-var="CaptionAlign" Owner="Layout" Type="Atom" Inherit="Inheritable" Condition="Has-value">
				<Emit-string>caption-side:</Emit-string>
				<Proc-enum>
					<Proc-enum-choice Value-in="Before" Value-out="top"/>
					<Proc-enum-choice Value-in="After" Value-out="bottom"/>
					<Proc-enum-choice Value-in="Start" Value-out="left"/>
					<Proc-enum-choice Value-in="End" Value-out="right"/>
				</Proc-enum>
			</Proc-var>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Caption" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/caption&gt;</Emit-string>
		</Event>
		<!--Header and Footer sections-->
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="THead" Alternate-name="TableHead" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;thead</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Table-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="table-contents"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="THead" Alternate-name="TableHead" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/thead&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TableHeader" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;thead</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Table-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="table-contents"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TableHeader" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/thead&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="TFoot" Alternate-name="TableFoot" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;tfoot</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Table-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="table-contents"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="TFoot" Alternate-name="TableFoot" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/tfoot&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TableFooter" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;tfoot</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Table-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="table-contents"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TableFooter" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/tfoot&gt;</Emit-string>
		</Event>
	</Define-event-list>
	<Define-event-list Name="table-contents">
		<!--Body-->
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TBody" Alternate-name="TableBody" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;tbody</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Table-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="table-contents"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TBody" Alternate-name="TableBody" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/tbody&gt;</Emit-string>
		</Event>
		<!--Rows-->
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TR" Alternate-name="TableRow" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;tr</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Table-row-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="table-contents"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TR" Alternate-name="TableRow" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/tr&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="FTR" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;tr</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Table-row-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-Before="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="table-contents"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="FTR" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/tr&gt;</Emit-string>
		</Event>
		<!--Cells-->
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TH" Alternate-name="TableHeaderCell" Node-content="Empty" Event-class="Enter">
			<Emit-string>&lt;th</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="Table-cell-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Table-cell-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">/&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TH" Alternate-name="TableHeaderCell" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;th</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="Table-cell-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Table-cell-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TH" Alternate-name="TableHeaderCell" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/th&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="FTH" Node-content="Empty" Event-class="Enter">
			<Emit-string>&lt;th</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="Table-cell-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Table-cell-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">/&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="FTH" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;th</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="Table-cell-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Table-cell-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="FTH" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/th&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TD" Alternate-name="TableDataCell" Node-content="Empty" Event-class="Enter">
			<Emit-string>&lt;td</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="Table-cell-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Table-cell-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">/&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TD" Alternate-name="TableDataCell" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;td</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="Table-cell-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Table-cell-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TD" Alternate-name="TableDataCell" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/td&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="FTD" Node-content="Empty" Event-class="Enter">
			<Emit-string>&lt;td</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="Table-cell-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Table-cell-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">/&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="FTD" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;td</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="Table-cell-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Table-cell-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="FTD" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/td&gt;</Emit-string>
		</Event>
		<!--Catch-all-->
		<Event Inf-type="Struct-elem" Name-type="Any" Node-content="Has-kids" Event-class="Enter">
			<Walk-children Use-event-list="table-contents"/>
		</Event>
	</Define-event-list>
	<Define-event-list Name="ruby-elements">
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="RB" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;rb&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="RB" Node-content="Has-kids" Event-class="Exit">
			<Emit-string>&lt;/rb&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="RP" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;rp&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="RP" Node-content="Has-kids" Event-class="Exit">
			<Emit-string>&lt;/rp&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="RT" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;rt&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="RT" Node-content="Has-kids" Event-class="Exit">
			<Emit-string>&lt;/rt&gt;</Emit-string>
		</Event>
		<Call-event-list Name="content-events"/>
	</Define-event-list>
	<Define-event-list Name="content-elements">
		<!-- ***** MCRef nodes *****-->
		<Event Inf-type="Pds-mc" Name-type="Any" Node-content="Has-text-only" Event-class="Enter">
			<Proc-doc-text do-br-substitution="do-br-substitution"/>
		</Event>
		<Event Inf-type="Pds-mc" Name-type="Any" Node-content="Image" Event-class="Enter">
			<Emit-string>&lt;img</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Figure-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string SP-Before="Yes" NL-Before="Yes">src=&quot;</Emit-string>
			<Proc-image-content/>
		</Event>
		<Event Inf-type="Pds-mc" Name-type="Any" Node-content="Image" Event-class="Exit">
			<Emit-string>&quot; &gt;</Emit-string>
		</Event>
		<Event Inf-type="Pds-mc" Name-type="Any" Node-content="Graphic" Event-class="Enter">
			<Emit-string>&lt;img</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Figure-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string SP-Before="Yes" NL-Before="Yes">src=&quot;</Emit-string>
			<Proc-image-content/>
		</Event>
		<Event Inf-type="Pds-mc" Name-type="Any" Node-content="Graphic" Event-class="Exit">
			<Emit-string>&quot; &gt;</Emit-string>
		</Event>
		<!-- ***** Inline elements *****-->
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Span" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;span</Emit-string>
			<Call-proc-list Name="Span-element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Call-proc-list Name="Span-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Span-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-Before="Yes">&gt;</Emit-string>
			<Evaluate-var Pdf-var="ActualText" Owner="Structelem" Type="String" Inherit="Not-inherited" Condition="Has-value">
				<Proc-string/>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ActualText" Owner="Structelem" Type="String" Inherit="Not-inherited" Condition="No-value">
				<Call-proc-list Name="Span-entry-wrappers"/>
				<Walk-children Use-event-list="content-elements"/>
			</Evaluate-var>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Span" Node-content="Has-kids" Event-class="Exit">
			<Evaluate-var Pdf-var="ActualText" Owner="Structelem" Type="String" Inherit="Not-inherited" Condition="No-value">
				<Call-proc-list Name="Span-exit-wrappers"/>
			</Evaluate-var>
			<Emit-string>&lt;/span</Emit-string>
			<Emit-string NL-Before="Yes">&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Note" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;div class=&quot;Note&quot;</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Note" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/div&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="BibEntry" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;div class=&quot;BibEntry&quot;</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="BibEntry" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/div&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Quote" Alternate-name="Q" Node-content="Has-kids" Event-class="Enter">
			<!--Inline quote-->
			<Emit-string>&lt;q</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Call-proc-list Name="Span-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Span-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string>&gt;</Emit-string>
			<Call-proc-list Name="Span-entry-wrappers"/>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Quote" Alternate-name="Q" Node-content="Has-kids" Event-class="Exit">
			<Call-proc-list Name="Span-exit-wrappers"/>
			<Emit-string>&lt;/q</Emit-string>
			<Emit-string NL-Before="Yes">&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Code" Node-content="Has-kids" Event-class="Enter">
			<Comment>Inline code fragment</Comment>
			<Emit-string>&lt;code</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Call-proc-list Name="Span-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Span-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string>&gt;</Emit-string>
			<Call-proc-list Name="Span-entry-wrappers"/>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Code" Node-content="Has-kids" Event-class="Exit">
			<Call-proc-list Name="Span-exit-wrappers"/>
			<Emit-string>&lt;/code</Emit-string>
			<Emit-string NL-Before="Yes">&gt;</Emit-string>
		</Event>
		<!--Reference nodes and thier children are discarded-->
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Ruby" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;ruby&gt;</Emit-string>
			<Walk-children Use-event-list="ruby-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Ruby" Node-content="Has-kids" Event-class="Exit">
			<Emit-string>&lt;/ruby</Emit-string>
			<Emit-string NL-Before="Yes">&gt;</Emit-string>
		</Event>
		<!-- ***** Block elements *****-->
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="P" Alternate-name="Paragraph" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;p</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Call-proc-list Name="Span-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Span-styles"/>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="P" Alternate-name="Paragraph" Node-content="Has-kids" Event-class="Exit">
			<Emit-string>&lt;/p</Emit-string>
			<Emit-string NL-Before="Yes">&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H" Alternate-name="Heading" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;h1</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Call-proc-list Name="Span-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Span-styles"/>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H" Alternate-name="Heading" Node-content="Has-kids" Event-class="Exit">
			<Emit-string>&lt;/h1</Emit-string>
			<Emit-string NL-Before="Yes">&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H1" Alternate-name="Heading1" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;h1</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Call-proc-list Name="Span-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Span-styles"/>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H1" Alternate-name="Heading1" Node-content="Has-kids" Event-class="Exit">
			<Emit-string>&lt;/h1</Emit-string>
			<Emit-string NL-Before="Yes">&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H2" Alternate-name="Heading2" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;h2</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Call-proc-list Name="Span-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Span-styles"/>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H2" Alternate-name="Heading2" Node-content="Has-kids" Event-class="Exit">
			<Emit-string>&lt;/h2</Emit-string>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H3" Alternate-name="Heading3" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;h3</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Call-proc-list Name="Span-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Span-styles"/>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H3" Alternate-name="Heading3" Node-content="Has-kids" Event-class="Exit">
			<Emit-string>&lt;/h3</Emit-string>
			<Emit-string NL-Before="Yes">&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H4" Alternate-name="Heading4" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;h4</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Call-proc-list Name="Span-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Span-styles"/>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H4" Alternate-name="Heading4" Node-content="Has-kids" Event-class="Exit">
			<Emit-string>&lt;/h4</Emit-string>
			<Emit-string NL-Before="Yes">&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H5" Alternate-name="Heading5" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;h5</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Call-proc-list Name="Span-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Span-styles"/>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H5" Alternate-name="Heading5" Node-content="Has-kids" Event-class="Exit">
			<Emit-string>&lt;/h5</Emit-string>
			<Emit-string NL-Before="Yes">&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H6" Alternate-name="Heading6" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;h6</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Call-proc-list Name="Span-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Span-styles"/>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="H6" Alternate-name="Heading6" Node-content="Has-kids" Event-class="Exit">
			<Emit-string>&lt;/h6</Emit-string>
			<Emit-string NL-Before="Yes">&gt;</Emit-string>
		</Event>
		<!-- ***** Group elements *****-->
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Div" Alternate-name="Division" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;div</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Div" Alternate-name="Division" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/div&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Sect" Alternate-name="Section" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;div class=&quot;Sect&quot;</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Sect" Alternate-name="Section" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/div&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Part" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;div class=&quot;Part&quot;</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Part" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/div&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Art" Alternate-name="Article" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;div class=&quot;Article&quot;</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Art" Alternate-name="Article" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/div&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Doc" Alternate-name="Document" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;div class=&quot;Document&quot;</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Doc" Alternate-name="Document" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/div&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Caption" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;div Class=&quot;unexpected-caption&quot; </Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Caption" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/div&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TOC" Alternate-name="TableOfContents" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;div class=&quot;TOC&quot;</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TOC" Alternate-name="TableOfContents" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/div&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TOCI" Alternate-name="ContentItem" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;div class=&quot;TOCI&quot;</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="TOCI" Alternate-name="ContentItem" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/div&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Index" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;div class=&quot;Index&quot;</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Index" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/div&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Blockquote" Alternate-name="BQ" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;blockquote</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Blockquote" Alternate-name="BQ" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/blockquote&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Group" Node-content="Has-kids" Event-class="Enter">
			<!--Group: No tags applied-->
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<!-- ***** List elements *****-->
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="UL" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;ul</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="List-styles"/>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="list-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="UL" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/ul&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="OL" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;ol</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="List-styles"/>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="list-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="OL" Alternate-name="-none-" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/ol&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="DL" Node-content="Has-kids" Event-class="Enter">
			<Emit-string>&lt;dl</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="List-styles"/>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="list-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="DL" Node-content="Has-kids" Event-class="Exit">
			<Emit-string NL-After="Yes">&lt;/dl&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="L" Alternate-name="List" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="No-value">
				<Emit-string>&lt;dl</Emit-string>
				<Call-proc-list Name="Element-attributes"/>
				<Call-proc-list Name="User-attributes"/>
				<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
				<Call-proc-list Name="Para-styles"/>
				<Call-proc-list Name="Css-styles"/>
				<Conditional-suffix>&quot;</Conditional-suffix>
				<Emit-string NL-After="Yes">&gt;</Emit-string>
				<Walk-children Use-event-list="list-elements"/>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="None">
				<Emit-string>&lt;dl</Emit-string>
				<Call-proc-list Name="Element-attributes"/>
				<Call-proc-list Name="User-attributes"/>
				<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
				<Call-proc-list Name="Para-styles"/>
				<Call-proc-list Name="Css-styles"/>
				<Conditional-suffix>&quot;</Conditional-suffix>
				<Emit-string NL-After="Yes">&gt;</Emit-string>
				<Walk-children Use-event-list="list-elements"/>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="None">
				<Emit-string>&lt;dl</Emit-string>
				<Call-proc-list Name="Element-attributes"/>
				<Call-proc-list Name="User-attributes"/>
				<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
				<Call-proc-list Name="Para-styles"/>
				<Call-proc-list Name="Css-styles"/>
				<Conditional-suffix>&quot;</Conditional-suffix>
				<Emit-string NL-After="Yes">&gt;</Emit-string>
				<Walk-children Use-event-list="list-elements"/>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="Disc">
				<Emit-string>&lt;ul</Emit-string>
				<Call-proc-list Name="Element-attributes"/>
				<Call-proc-list Name="User-attributes"/>
				<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
				<Call-proc-list Name="List-styles"/>
				<Call-proc-list Name="Para-styles"/>
				<Call-proc-list Name="Css-styles"/>
				<Conditional-suffix>&quot;</Conditional-suffix>
				<Emit-string NL-After="Yes">&gt;</Emit-string>
				<Walk-children Use-event-list="list-elements"/>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="Circle">
				<Emit-string>&lt;ul</Emit-string>
				<Call-proc-list Name="Element-attributes"/>
				<Call-proc-list Name="User-attributes"/>
				<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
				<Call-proc-list Name="List-styles"/>
				<Call-proc-list Name="Para-styles"/>
				<Call-proc-list Name="Css-styles"/>
				<Conditional-suffix>&quot;</Conditional-suffix>
				<Emit-string NL-After="Yes">&gt;</Emit-string>
				<Walk-children Use-event-list="list-elements"/>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="Square">
				<Emit-string>&lt;ul</Emit-string>
				<Call-proc-list Name="Element-attributes"/>
				<Call-proc-list Name="User-attributes"/>
				<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
				<Call-proc-list Name="List-styles"/>
				<Call-proc-list Name="Para-styles"/>
				<Call-proc-list Name="Css-styles"/>
				<Conditional-suffix>&quot;</Conditional-suffix>
				<Emit-string NL-After="Yes">&gt;</Emit-string>
				<Walk-children Use-event-list="list-elements"/>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="Decimal">
				<Emit-string>&lt;ol</Emit-string>
				<Call-proc-list Name="Element-attributes"/>
				<Call-proc-list Name="User-attributes"/>
				<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
				<Call-proc-list Name="List-styles"/>
				<Call-proc-list Name="Para-styles"/>
				<Call-proc-list Name="Css-styles"/>
				<Conditional-suffix>&quot;</Conditional-suffix>
				<Emit-string NL-After="Yes">&gt;</Emit-string>
				<Walk-children Use-event-list="list-elements"/>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="LowerRoman">
				<Emit-string>&lt;ol</Emit-string>
				<Call-proc-list Name="Element-attributes"/>
				<Call-proc-list Name="User-attributes"/>
				<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
				<Call-proc-list Name="List-styles"/>
				<Call-proc-list Name="Para-styles"/>
				<Call-proc-list Name="Css-styles"/>
				<Conditional-suffix>&quot;</Conditional-suffix>
				<Emit-string NL-After="Yes">&gt;</Emit-string>
				<Walk-children Use-event-list="list-elements"/>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="UpperRoman">
				<Emit-string>&lt;ol</Emit-string>
				<Call-proc-list Name="Element-attributes"/>
				<Call-proc-list Name="User-attributes"/>
				<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
				<Call-proc-list Name="List-styles"/>
				<Call-proc-list Name="Para-styles"/>
				<Call-proc-list Name="Css-styles"/>
				<Conditional-suffix>&quot;</Conditional-suffix>
				<Emit-string NL-After="Yes">&gt;</Emit-string>
				<Walk-children Use-event-list="list-elements"/>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="LowerAlpha">
				<Emit-string>&lt;ol</Emit-string>
				<Call-proc-list Name="Element-attributes"/>
				<Call-proc-list Name="User-attributes"/>
				<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
				<Call-proc-list Name="List-styles"/>
				<Call-proc-list Name="Para-styles"/>
				<Call-proc-list Name="Css-styles"/>
				<Conditional-suffix>&quot;</Conditional-suffix>
				<Emit-string NL-After="Yes">&gt;</Emit-string>
				<Walk-children Use-event-list="list-elements"/>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="UpperAlpha">
				<Emit-string>&lt;ol</Emit-string>
				<Call-proc-list Name="Element-attributes"/>
				<Call-proc-list Name="User-attributes"/>
				<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
				<Call-proc-list Name="List-styles"/>
				<Call-proc-list Name="Para-styles"/>
				<Call-proc-list Name="Css-styles"/>
				<Conditional-suffix>&quot;</Conditional-suffix>
				<Emit-string NL-After="Yes">&gt;</Emit-string>
				<Walk-children Use-event-list="list-elements"/>
			</Evaluate-var>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="L" Alternate-name="List" Node-content="Has-kids" Event-class="Exit">
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="No-value">
				<Emit-string NL-After="Yes">&lt;/dl&gt;</Emit-string>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="None">
				<Emit-string NL-After="Yes">&lt;/dl&gt;</Emit-string>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="Disc">
				<Emit-string NL-After="Yes">&lt;/ul&gt;</Emit-string>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="Circle">
				<Emit-string NL-After="Yes">&lt;/ul&gt;</Emit-string>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="Square">
				<Emit-string NL-After="Yes">&lt;/ul&gt;</Emit-string>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="Decimal">
				<Emit-string NL-After="Yes">&lt;/ol&gt;</Emit-string>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="LowerRoman">
				<Emit-string NL-After="Yes">&lt;/ol&gt;</Emit-string>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="UpperRoman">
				<Emit-string NL-After="Yes">&lt;/ol&gt;</Emit-string>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="LowerAlpha">
				<Emit-string NL-After="Yes">&lt;/ol&gt;</Emit-string>
			</Evaluate-var>
			<Evaluate-var Pdf-var="ListNumbering" Owner="List" Type="Atom" Inherit="Inheritable" Condition="Matches-value" Compare="UpperAlpha">
				<Emit-string NL-After="Yes">&lt;/ol&gt;</Emit-string>
			</Evaluate-var>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="LI" Alternate-name="ListItem" Node-content="Has-kids" Event-class="Enter">
			<!--Unexpected LI is converted to a DL-->
			<Emit-string>&lt;dl class=&quot;unexpected-ListItem&quot;</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Para-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix>&quot;</Conditional-suffix>
			<Emit-string NL-After="Yes">&gt;</Emit-string>
			<Walk-children Use-event-list="list-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="LI" Alternate-name="ListItem" Node-content="Has-kids" Event-class="Exit">
			<!--Unexpected LI is converted to a DL-->
			<Emit-string NL-After="Yes">&lt;/dl&gt;</Emit-string>
		</Event>
		<!-- ***** Annotation elements *****-->
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Link" Alternate-name="A" Node-content="Has-kids" Event-class="Enter">
			<Evaluate-var Pdf-var="LinkDestination" Owner="Link" Type="String" Has-enum="No-enum" Inherit="Not-inherited" Default="-none-" Condition="Has-value" Compare="-none-">
				<Emit-string SP-Before="No" SP-After="Yes" NL-Before="No" NL-After="No">&lt;a</Emit-string>
			</Evaluate-var>
			<Evaluate-var Pdf-var="LinkDestination" Owner="Link" Type="String" Has-enum="No-enum" Inherit="Not-inherited" Default="-none-" Condition="No-value" Compare="-none-">
				<Evaluate-var Pdf-var="LinkTargetLabel" Owner="Link" Type="String" Has-enum="No-enum" Inherit="Not-inherited" Default="-none-" Condition="Has-value" Compare="-none-">
					<Emit-string SP-Before="No" SP-After="Yes" NL-Before="No" NL-After="No">&lt;a</Emit-string>
				</Evaluate-var>
				<Evaluate-var Pdf-var="LinkTargetLabel" Owner="Link" Type="String" Has-enum="No-enum" Inherit="Not-inherited" Default="-none-" Condition="No-value" Compare="-none-">
					<Emit-string SP-Before="No" SP-After="Yes" NL-Before="No" NL-After="No">&lt;span</Emit-string>
				</Evaluate-var>
			</Evaluate-var>
			<Evaluate-var Pdf-var="LinkDestination" Owner="Link" Type="String" Has-enum="No-enum" Inherit="Not-inherited" Default="-none-" Condition="Has-value" Compare="-none-">
				<Emit-string SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">href=&apos;</Emit-string>
				<Proc-var Pdf-var="LinkDestination" Owner="Link" Type="String" Has-enum="No-enum" Inherit="Not-inherited" Default="-none-" Condition="Always" Compare="-none-">
					<Proc-string/>
				</Proc-var>
				<Emit-string SP-Before="No" SP-After="Yes" NL-Before="No" NL-After="No">&apos;</Emit-string>
			</Evaluate-var>
			<Evaluate-var Pdf-var="LinkTargetLabel" Owner="Link" Type="String" Has-enum="No-enum" Inherit="Not-inherited" Default="-none-" Condition="Has-value" Compare="-none-">
				<Emit-string SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">name=&apos;</Emit-string>
				<Proc-var Pdf-var="LinkTargetLabel" Owner="Link" Type="String" Has-enum="No-enum" Inherit="Not-inherited" Default="-none-" Condition="Always" Compare="-none-">
					<Proc-string/>
				</Proc-var>
				<Emit-string SP-Before="No" SP-After="Yes" NL-Before="No" NL-After="No">&apos;</Emit-string>
			</Evaluate-var>
			<Call-proc-list Name="Span-element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Call-proc-list Name="Span-attributes"/>
			<Conditional-prefix SP-Before="Yes" SP-After="No" NL-Before="No" NL-After="No">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Span-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">&quot;</Conditional-suffix>
			<Emit-string SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">&gt;</Emit-string>
			<Call-proc-list Name="Span-entry-wrappers"/>
			<Walk-children Use-event-list="content-elements"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Link" Alternate-name="A" Node-content="Has-kids" Event-class="Exit">
			<Call-proc-list Name="Span-exit-wrappers"/>
			<Evaluate-var Pdf-var="LinkDestination" Owner="Link" Type="String" Has-enum="No-enum" Inherit="Not-inherited" Default="-none-" Condition="Has-value" Compare="-none-">
				<Emit-string SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">&lt;/a&gt;</Emit-string>
			</Evaluate-var>
			<Evaluate-var Pdf-var="LinkDestination" Owner="Link" Type="String" Has-enum="No-enum" Inherit="Not-inherited" Default="-none-" Condition="No-value" Compare="-none-">
				<Evaluate-var Pdf-var="LinkTargetLabel" Owner="Link" Type="String" Has-enum="No-enum" Inherit="Not-inherited" Default="-none-" Condition="Has-value" Compare="-none-">
					<Emit-string SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">&lt;/a&gt;</Emit-string>
				</Evaluate-var>
				<Evaluate-var Pdf-var="LinkTargetLabel" Owner="Link" Type="String" Has-enum="No-enum" Inherit="Not-inherited" Default="-none-" Condition="No-value" Compare="-none-">
					<Emit-string SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">&lt;/span&gt;</Emit-string>
				</Evaluate-var>
			</Evaluate-var>
		</Event>
		<!-- ***** Table elements *****-->
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="FTable" Alternate-name="-none-" Node-content="Has-kids" Event-class="Enter">
			<Emit-string SP-Before="No" SP-After="Yes" NL-Before="No" NL-After="No">&lt;table</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes" SP-After="No" NL-Before="No" NL-After="No">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Table-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">&quot;</Conditional-suffix>
			<Emit-string SP-Before="No" SP-After="No" NL-Before="Yes" NL-After="No">&gt;</Emit-string>
			<Walk-children Use-event-list="table-head-contents"/>
			<Walk-children Use-event-list="table-contents"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="FTable" Alternate-name="-none-" Node-content="Has-kids" Event-class="Exit">
			<Emit-string SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">&lt;/table</Emit-string>
			<Emit-string SP-Before="No" SP-After="No" NL-Before="Yes" NL-After="No">&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Table" Alternate-name="Tbl" Node-content="Has-kids" Event-class="Enter">
			<Emit-string SP-Before="No" SP-After="Yes" NL-Before="No" NL-After="No">&lt;table</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes" SP-After="No" NL-Before="No" NL-After="No">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Table-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">&quot;</Conditional-suffix>
			<Emit-string SP-Before="No" SP-After="No" NL-Before="Yes" NL-After="No">&gt;</Emit-string>
			<Walk-children Use-event-list="table-head-contents"/>
			<Walk-children Use-event-list="table-contents"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Table" Alternate-name="Tbl" Node-content="Has-kids" Event-class="Exit">
			<Emit-string SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">&lt;/table</Emit-string>
			<Emit-string SP-Before="No" SP-After="No" NL-Before="Yes" NL-After="No">&gt;</Emit-string>
		</Event>
		<!-- ***** Illustration elements *****-->
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Figure" Alternate-name="Image" Node-content="Has-kids" Event-class="Enter">
			<Emit-string SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">&lt;img</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes" SP-After="No" NL-Before="No" NL-After="No">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Figure-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">&quot;</Conditional-suffix>
			<Emit-string SP-Before="Yes" SP-After="No" NL-Before="Yes" NL-After="No">src=&quot;</Emit-string>
			<Proc-image-content/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Figure" Alternate-name="Image" Node-content="Has-kids" Event-class="Exit">
			<Emit-string SP-Before="No" SP-After="No" NL-Before="Yes" NL-After="No">&quot;/&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Img" Alternate-name="-none-" Node-content="Has-kids" Event-class="Enter">
			<Emit-string SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">&lt;img</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes" SP-After="No" NL-Before="No" NL-After="No">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Figure-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">&quot;</Conditional-suffix>
			<Emit-string SP-Before="Yes" SP-After="No" NL-Before="Yes" NL-After="No">src=&quot;</Emit-string>
			<Proc-image-content/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Img" Alternate-name="-none-" Node-content="Has-kids" Event-class="Exit">
			<Emit-string SP-Before="No" SP-After="No" NL-Before="Yes" NL-After="No">&quot;/&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="Figure" Alternate-name="Image" Node-content="Has-kids" Event-class="Enter">
			<Emit-string SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">&lt;img</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes" SP-After="No" NL-Before="No" NL-After="No">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Figure-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">&quot;</Conditional-suffix>
			<Emit-string SP-Before="Yes" SP-After="No" NL-Before="Yes" NL-After="No">src=&quot;</Emit-string>
			<Proc-image-content/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="Figure" Alternate-name="Image" Node-content="Has-kids" Event-class="Exit">
			<Emit-string SP-Before="No" SP-After="No" NL-Before="Yes" NL-After="No">&quot;/&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="Img" Alternate-name="-none-" Node-content="Has-kids" Event-class="Enter">
			<Emit-string SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">&lt;img</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes" SP-After="No" NL-Before="No" NL-After="No">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Figure-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">&quot;</Conditional-suffix>
			<Emit-string SP-Before="Yes" SP-After="No" NL-Before="Yes" NL-After="No">src=&quot;</Emit-string>
			<Proc-image-content/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-user-label" Node-name="Img" Alternate-name="-none-" Node-content="Has-kids" Event-class="Exit">
			<Emit-string SP-Before="No" SP-After="No" NL-Before="Yes" NL-After="No">&quot;/&gt;</Emit-string>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Form" Alternate-name="-none-" Node-content="Has-kids" Event-class="Enter">
			<Comment>Form nodes and thier children are discarded</Comment>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Form" Alternate-name="-none-" Node-content="Has-kids" Event-class="Exit">
			<Comment>Form: Not Implemented</Comment>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Formula" Alternate-name="-none-" Node-content="Has-kids" Event-class="Enter">
			<Emit-string SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">&lt;img</Emit-string>
			<Call-proc-list Name="Element-attributes"/>
			<Call-proc-list Name="User-attributes"/>
			<Conditional-prefix SP-Before="Yes" SP-After="No" NL-Before="No" NL-After="No">style=&quot;</Conditional-prefix>
			<Call-proc-list Name="Figure-styles"/>
			<Call-proc-list Name="Css-styles"/>
			<Conditional-suffix SP-Before="No" SP-After="No" NL-Before="No" NL-After="No">&quot;</Conditional-suffix>
			<Emit-string SP-Before="Yes" SP-After="No" NL-Before="No" NL-After="No">class=&quot;formula&quot;</Emit-string>
			<Walk-children Use-event-list="formula-contents"/>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Formula" Alternate-name="-none-" Node-content="Has-kids" Event-class="Exit">
			<Emit-string SP-Before="No" SP-After="No" NL-Before="Yes" NL-After="No">/&gt;</Emit-string>
		</Event>
		<!-- ***** Misc *****-->
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Private" Alternate-name="-none-" Node-content="Has-kids" Event-class="Enter">
			<Comment>Private nodes and thier children are discarded</Comment>
		</Event>
		<Event Inf-type="Struct-elem" Name-type="Structure-role" Node-name="Private" Alternate-name="-none-" Node-content="Has-kids" Event-class="Exit">
			<Comment>Private nodes and thier children are discarded</Comment>
		</Event>
	</Define-event-list>
	<!-- ===== Fixed info at start of file =====-->
	<Set-encoding>
		<Enum-encoding Type="Utf-8-out" Suppress="No" Emit-BOM="No"/>
		<Enum-encoding Type="Utf-16-out" Suppress="No" Emit-BOM="Yes"/>
		<Enum-encoding Type="Ucs-4-out" Suppress="No" Emit-BOM="Yes"/>
		<Enum-encoding Type="Iso-latin-1-out" Suppress="No" Emit-BOM="No"/>
		<Enum-encoding Type="Html-ascii-out" Suppress="No" Emit-BOM="No"/>
	</Set-encoding>
	<Begin-encoding/>
	<Emit-string>&lt;?xml version=&quot;1.0&quot; encoding=&quot;</Emit-string>
	<Emit-encoding>
		<Proc-enum>
			<Proc-enum-choice Value-in="Utf-8-out" Value-out="UTF-8"/>
			<Proc-enum-choice Value-in="Utf-16-out" Value-out="UTF-16"/>
			<Proc-enum-choice Value-in="Ucs-4-out" Value-out="ISO-10646-UCS-4"/>
			<Proc-enum-choice Value-in="Iso-latin-1-out" Value-out="ISO-8859-1"/>
			<Proc-enum-choice Value-in="Html-ascii-out" Value-out="US-ASCII"/>
		</Proc-enum>
	</Emit-encoding>
	<Emit-string NL-After="Yes">&quot; ?&gt;</Emit-string>
	<Emit-string NL-After="Yes">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;DTD/xhtml1-strict.dtd&quot;&gt;</Emit-string>
	<Emit-string NL-After="Yes">&lt;!-- Created from PDF via Acrobat SaveAsXML --&gt;</Emit-string>
	<Emit-string NL-After="Yes">&lt;!-- Mapping table version: 28-February-2003 --&gt;</Emit-string>
	<Emit-string NL-After="Yes">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;</Emit-string>
	<Emit-string NL-After="Yes">&lt;head&gt;</Emit-string>
	<Emit-string>&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=</Emit-string>
	<Emit-encoding>
		<Proc-enum>
			<Proc-enum-choice Value-in="Utf-8-out" Value-out="UTF-8"/>
			<Proc-enum-choice Value-in="Utf-16-out" Value-out="UTF-16"/>
			<Proc-enum-choice Value-in="Ucs-4-out" Value-out="ISO-10646-UCS-4"/>
			<Proc-enum-choice Value-in="Iso-latin-1-out" Value-out="ISO-8859-1"/>
			<Proc-enum-choice Value-in="Html-ascii-out" Value-out="US-ASCII"/>
		</Proc-enum>
	</Emit-encoding>
	<Emit-string>&quot;&gt;</Emit-string>
	<Emit-string NL-After="Yes">&lt;style type=&quot;text/css&quot;&gt;</Emit-string>
	<Walk-cached-property-sets Use-event-list="Css-cached-styles"/>
	<Emit-string NL-After="Yes">&lt;/style&gt;</Emit-string>
	<Walk-doc-metadata Use-proc-list="basic-metadata"/>
	<Emit-string NL-After="Yes">&lt;/head&gt;</Emit-string>
	<Emit-string NL-After="Yes">&lt;body bgcolor=white text=black link=blue vlink=purple alink=fushia&gt;</Emit-string>
	<Walk-structure Use-event-list="content-elements"/>
	<Emit-string NL-After="Yes">&lt;/body&gt;</Emit-string>
	<Emit-string NL-After="Yes">&lt;/html&gt;</Emit-string>
</Root>
